#define RGB			1
#define RED_ON			2
#define RED_PATT_1		4
#define RED_PATT_2		5
#define RED_PATT_3		6
#define PATT_SHFIT		9
#define ON_SHFIT		10
#define RGB_SHFIT		15
#define BATT_CHARGED		2
#define BATT_UNCHARGED		3
#define BATT_LOW		4
#define BATT_CRITICAL_LOW	5
#define BATT_FULL_CHARGED	7
#define BATT_OVER_HEAT		10
#define BATT_UNDER_HEAT		11
#define NOTIFICATION_OFF	8
#define NOTIFICATION_ON		9
#define BATT_BAD		15
#define BATT_BAD_DVT2		6

typedef struct _as3668_pattern {
	u8 reg_addr;
	u8 value;
} as3668_pattern;

as3668_pattern as3668_pattern1[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x0C }
	, { 0x16, 0x44 }
	, { 0x18, 0x38 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

as3668_pattern as3668_pattern2[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x3C }
	, { 0x05, 0x64 }
	, { 0x01, 0xFC }
	, { 0x16, 0x15 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x2A }
	, { 0x1C, 0x24 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

//red--------------------------------------------
as3668_pattern as3668_pattern_red_on[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x04 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

as3668_pattern as3668_pattern_red_off[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x00 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

/*0.27s Red Blinking every 8.4 seconds*/
as3668_pattern as3668_pattern_red1[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x0C }
	, { 0x16, 0x00 }
	, { 0x18, 0x3B }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

/*0.27s Red Double Blinking every 8.4 seconds*/
as3668_pattern as3668_pattern_red2[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x0C }
	, { 0x16, 0x00 }
	, { 0x18, 0x3B }
	, { 0x19, 0x42 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

/*0.07s Red Double Fast Blinking every 2.1 seconds*/
as3668_pattern as3668_pattern_red3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x3C }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x0C }
	, { 0x16, 0x00 }
	, { 0x18, 0x29 }
	, { 0x19, 0x42 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

//green-------------------------------------------
as3668_pattern as3668_pattern_green_on[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x3C }
	, { 0x05, 0x00 }
	, { 0x01, 0x10 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

as3668_pattern as3668_pattern_green_off[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x00 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

/*0.27s Green Blinking every 9.2 seconds*/
as3668_pattern as3668_pattern_green1[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x3C }
	, { 0x05, 0x00 }
	, { 0x01, 0x30 }
	, { 0x16, 0x00 }
	, { 0x18, 0x2B }
	, { 0x19, 0x00 }
	, { 0x1A, 0x30 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

//blue--------------------------------------------
as3668_pattern as3668_pattern_blue_on[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x3C }
	, { 0x01, 0x40 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

as3668_pattern as3668_pattern_blue_off[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x00 }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x00 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

//red pattern for after dvt3 device------------
as3668_pattern as3668_pattern_red_on_dvt3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x3C }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x01 }
	, { 0x16, 0x00 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x00 }
};

/*0.27s Red Blinking every 8.4 seconds*/
as3668_pattern as3668_pattern_red1_dvt3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x3C }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x03 }
	, { 0x16, 0x00 }
	, { 0x18, 0x3B }
	, { 0x19, 0x00 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

/*0.27s Red Double Blinking every 8.4 seconds*/
as3668_pattern as3668_pattern_red2_dvt3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x3C }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x03 }
	, { 0x16, 0x00 }
	, { 0x18, 0x3B }
	, { 0x19, 0x42 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

/*0.07s Red Double Fast Blinking every 2.1 seconds*/
as3668_pattern as3668_pattern_red3_dvt3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x3C }
	, { 0x03, 0x00 }
	, { 0x04, 0x00 }
	, { 0x05, 0x00 }
	, { 0x01, 0x03 }
	, { 0x16, 0x00 }
	, { 0x18, 0x29 }
	, { 0x19, 0x42 }
	, { 0x1A, 0x00 }
	, { 0x1C, 0x00 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

as3668_pattern as3668_pattern2_dvt3[] = {
	{ 0x1B, 0x00 }
	, { 0x17, 0x00 }
	, { 0x01, 0x00 }
	, { 0x02, 0x3C }
	, { 0x03, 0x00 }
	, { 0x04, 0x3C }
	, { 0x05, 0x3C }
	, { 0x01, 0xF3 }
	, { 0x16, 0x15 }
	, { 0x18, 0x00 }
	, { 0x19, 0x00 }
	, { 0x1A, 0x90 }
	, { 0x1C, 0x84 }
	, { 0x17, 0x00 }
	, { 0x1B, 0x02 }
};

const u8 as3668_pattern_size[] = {
	sizeof(as3668_pattern1) / sizeof(as3668_pattern),
	sizeof(as3668_pattern2) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red_on) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red_off) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red1) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red2) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red3) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_green_on) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_green_off) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_green1) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_blue_on) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_blue_off) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red_on_dvt3) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red1_dvt3) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red2_dvt3) / sizeof(as3668_pattern),
	sizeof(as3668_pattern_red3_dvt3) / sizeof(as3668_pattern),
	sizeof(as3668_pattern2_dvt3) / sizeof(as3668_pattern),
};

const as3668_pattern * as3668_pattern_array[] = {
	as3668_pattern1,
	as3668_pattern2,
	as3668_pattern_red_on,
	as3668_pattern_red_off,
	as3668_pattern_red1,
	as3668_pattern_red2,
	as3668_pattern_red3,
	as3668_pattern_green_on,
	as3668_pattern_green_off,
	as3668_pattern_green1,
	as3668_pattern_blue_on,
	as3668_pattern_blue_off,
	as3668_pattern_red_on_dvt3,
	as3668_pattern_red1_dvt3,
	as3668_pattern_red2_dvt3,
	as3668_pattern_red3_dvt3,
	as3668_pattern2_dvt3,
};

